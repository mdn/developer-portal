#!/bin/bash

set -eo pipefail

usage() {
    echo -en "\nUsage: ${0} [ --build ]\n"
    echo -en "Options: \n"
    echo -en "  --help      What you see here\n"
    echo -en "  --debug     Bash set -x\n"
    echo -en "  --build     Optional argument, runs docker-compose up --build --detach\n"
    exit 0
}

while test $# -gt 0
do
  case "$1" in
    --debug)
        set -x
    ;;
    --help)
        usage
    ;;
    --build)
        ARG_BUILD=1
    ;;
  esac
  shift
done

# Remove env file to get a clean env
if [ -f .env ]; then
    echo "Removing old .env file"
    rm -f .env
fi

echo "Setting up environment"

echo "Generating .env file"
cat << EOF > .env
PYTHONUNBUFFERED=1
BASE_URL=http://localhost:8000
DJANGO_ENV=dev
DJANGO_SECRET_KEY=$(openssl rand -base64 64 | tr -d '+/\n=')
POSTGRES_DB=developerportal
POSTGRES_HOST=db
POSTGRES_PASSWORD=$(openssl rand -base64 64 | tr -d '+/\n=')
POSTGRES_USER=admin
OIDC_RP_CLIENT_ID=NotUsedInTestsButNeedsToBePresentForBootup
OIDC_RP_CLIENT_SECRET=NotUsedInTestsButNeedsToBePresentForBootup
OIDC_OP_JWKS_ENDPOINT=https://example.com/.well-known/jwks.json
EOF

echo "Taking down any existing containers"
docker-compose down --remove-orphans --volumes

if [ -n "${ARG_BUILD}" ]; then
    echo "Running build"
    docker-compose up --build --detach
fi

# wait for services to be up
echo "Waiting on services to come up"
docker-compose exec -T app urlwait postgresql://db:5432/developerportal 30
docker-compose exec -T app urlwait redis://redis:6379/0 30

echo "Running migrate"
docker-compose exec -T app python manage.py migrate
