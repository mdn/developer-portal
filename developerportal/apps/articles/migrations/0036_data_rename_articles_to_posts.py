# Generated by Django 2.2.6 on 2019-11-01 11:07

from django.db import migrations


def forwards(apps, schema_editor):
    """Go from Articles and /articles/* to Posts and /posts/* """

    # Get the fake models, with clearer names
    ArticlesListPage = apps.get_model("articles", "Articles")
    ArticlePage = apps.get_model("articles", "Article")

    # There should only be one, but this handles there being none present (eg, in CI)
    for articles_list_page in ArticlesListPage.objects.all():
        articles_list_page.slug = "posts"
        articles_list_page.title = "Posts"
        articles_list_page.draft_title = (
            "Posts"
        )  # to avoid a confusing result in the Wagtail UI
        articles_list_page.url_path = articles_list_page.url_path.replace(
            "/articles/", "/posts/"
        )
        articles_list_page.save()

    # The children of the Articles page need their url_path explicitly amending too
    # because we're not using live models with post-save() side effects
    for article_page in ArticlePage.objects.all():
        article_page.url_path = article_page.url_path.replace("/articles/", "/posts/")
        article_page.save()


def backwards(apps, schema_editor):
    """Go from Posts and /posts/* back to Articles and /articles/*"""

    # Get the fake models, with clearer names
    ArticlesListPage = apps.get_model("articles", "Articles")
    ArticlePage = apps.get_model("articles", "Article")

    # There should only be one, but this handles there being none present (eg, in CI)
    for articles_list_page in ArticlesListPage.objects.all():
        articles_list_page.slug = "articles"
        articles_list_page.title = "Articles"
        articles_list_page.draft_title = (
            "Articles"
        )  # to avoid a confusing result in the Wagtail UI
        articles_list_page.url_path = articles_list_page.url_path.replace(
            "/posts/", "/articles/"
        )
        articles_list_page.save()

    # The children of the Articles page need their url_path explicitly amending too
    # because we're not using live models with post-save() side effects
    for article_page in ArticlePage.objects.all():
        article_page.url_path = article_page.url_path.replace("/posts/", "/articles/")
        article_page.save()


class Migration(migrations.Migration):

    dependencies = [("articles", "0035_soft_rename_Article_as_Post_via_meta")]

    operations = [migrations.RunPython(forwards, backwards)]
